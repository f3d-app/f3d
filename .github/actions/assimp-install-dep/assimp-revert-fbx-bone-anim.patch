From 4d5b1d27f6e23d08ac9550de21ed6d06bae7a5f3 Mon Sep 17 00:00:00 2001
From: Mathieu Westphal <mathieu.westphal@kitware.com>
Date: Sun, 14 Apr 2024 19:12:25 +0200
Subject: [PATCH] Revert "Fix the build"

This reverts commit 01f2549abe70fe390f6c169b7f3de5ba4ab48e9f.

Revert "Update FBXConverter.cpp"

This reverts commit 384db8686e84fe95afe417fd341fc259f528649d.
---
 code/AssetLib/FBX/FBXConverter.cpp | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/code/AssetLib/FBX/FBXConverter.cpp b/code/AssetLib/FBX/FBXConverter.cpp
index cc73756fb..4d4d28a8f 100644
--- a/code/AssetLib/FBX/FBXConverter.cpp
+++ b/code/AssetLib/FBX/FBXConverter.cpp
@@ -55,7 +55,9 @@ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <assimp/MathFunctions.h>
 #include <assimp/StringComparison.h>
+
 #include <assimp/scene.h>
+
 #include <assimp/CreateAnimMesh.h>
 #include <assimp/StringUtils.h>
 #include <assimp/commonMetaData.h>
@@ -1651,7 +1653,7 @@ void FBXConverter::ConvertWeights(aiMesh *out, const MeshGeometry &geo, const ai
 
 void FBXConverter::ConvertCluster(std::vector<aiBone*> &local_mesh_bones, const Cluster *cluster,
         std::vector<size_t> &out_indices, std::vector<size_t> &index_out_indices,
-        std::vector<size_t> &count_out_indices, const aiMatrix4x4 &absolute_transform,
+        std::vector<size_t> &count_out_indices, const aiMatrix4x4 & /* absolute_transform*/,
         aiNode *) {
     ai_assert(cluster != nullptr); // make sure cluster valid
 
@@ -1668,16 +1670,16 @@ void FBXConverter::ConvertCluster(std::vector<aiBone*> &local_mesh_bones, const
         bone = new aiBone();
         bone->mName = bone_name;
 
-        //bone->mOffsetMatrix = cluster->Transform();
+        bone->mOffsetMatrix = cluster->Transform();
         // store local transform link for post processing
-        
+        /*
         bone->mOffsetMatrix = cluster->TransformLink();
         bone->mOffsetMatrix.Inverse();
 
-        const aiMatrix4x4 matrix = (aiMatrix4x4)absolute_transform;
+        aiMatrix4x4 matrix = (aiMatrix4x4)absolute_transform;
 
         bone->mOffsetMatrix = bone->mOffsetMatrix * matrix; // * mesh_offset
-        
+        */
         //
         // Now calculate the aiVertexWeights
         //
-- 
2.44.0

