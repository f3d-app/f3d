name: 'Install Draco Dependency'
description: 'Install Draco Dependency using cache when possible'
runs:
  using: "composite"
  steps:

    - name: Cache Draco
      id: cache-draco
      uses: actions/cache@v3
      with:
        path: dependencies/draco_install
        key: draco-1.5.6-${{runner.os}}-0

    - name: Checkout Draco
      if: steps.cache-draco.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: google/draco
        path: './dependencies/draco'
        ref: 1.5.6

    - name: Setup Draco
      if: steps.cache-draco.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies
      shell: bash
      run: |
        mkdir draco_build
        mkdir draco_install

    - name: Configure Draco
      if: steps.cache-draco.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/draco_build
      shell: bash
      run: >
        cmake ../draco
        -DBUILD_SHARED_LIBS=ON
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX=../draco_install
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        -DDRACO_BACKWARDS_COMPATIBILITY=OFF
        -DDRACO_JS_GLUE=OFF
        ${{ runner.os == 'macOS' && '-DCMAKE_OSX_DEPLOYMENT_TARGET=10.15' || null }}
        ${{ runner.os == 'Windows' && '-Ax64 -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL' || null }}

    - name: Build Draco
      if: steps.cache-draco.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/draco_build
      shell: bash
      run: cmake --build . --parallel 2 --target install --config Release

    - name: Copy to install
      working-directory: ${{github.workspace}}/dependencies/draco_install
      shell: bash
      run: cp -r ./* ../install/
