name: "Install libtiff Dependency"
description: "Install libtiff Dependency using cache when possible"
inputs:
  cpu:
    description: "CPU architecture to build for"
    required: false
    default: "x86_64"
  version:
    description: "Version of libtiff to build"
    required: true

runs:
  using: "composite"
  steps:
    - name: Check required inputs
      shell: bash
      run: |
        [[ "${{ inputs.version }}" ]] || { echo "version input is empty" ; exit 1; }

    - name: Cache libtiff
      id: cache-libtiff
      uses: actions/cache/restore@v4
      with:
        path: ${{github.workspace}}/dependencies/libtiff_install
        key: libtiff-${{inputs.version}}-${{runner.os}}-${{inputs.cpu}}-0

    - name: Checkout libtiff
      if: steps.cache-libtiff.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with: 
        repository: libsdl-org/libtiff
        path: "./dependencies/libtiff"
        ref: ${{inputs.version}}

    - name: Setup libtiff
      if: steps.cache-libtiff.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies
      shell: bash
      run: |
        mkdir libtiff_build
        mkdir libtiff_install

    - name: Configure libtiff
      if: steps.cache-libtiff.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/libtiff_build
      shell: bash
      run: >
        cmake ../libtiff
        -DBUILD_SHARED_LIBS=ON
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX=../libtiff_install
        -DCMAKE_PREFIX_PATH:PATH=$(pwd)/../install/
        ${{ runner.os == 'macOS' && '-DCMAKE_OSX_DEPLOYMENT_TARGET=12.0' || null }}
        ${{ runner.os == 'Windows' && '-Ax64 -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL' || null }}

    - name: Build libtiff
      if: steps.cache-libtiff.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/libtiff_build
      shell: bash
      run: cmake --build . --parallel 2 --target install --config Release

    - name: Copy to install
      working-directory: ${{github.workspace}}/dependencies/libtiff_install
      shell: bash
      run: cp -r ./* ../install/

    - name: Save cache
      if: steps.cache-libtiff.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.cache-libtiff.outputs.cache-primary-key }}
        path: dependencies/libtiff_install
