name: 'Install OCCT Dependency'
description: 'Install OCCT Dependency using cache when possible'
inputs:
  cpu:
    description: 'CPU architecture to build for'
    required: false
    default: 'x86_64'
  version:
    description: 'Version of occt to build'
    required: true

runs:
  using: "composite"
  steps:

    - name: Check required inputs
      shell: bash
      run: |
        [[ "${{ inputs.version }}" ]] || { echo "version input is empty" ; exit 1; }

    - name: Cache OCCT
      id: cache-occt
      uses: actions/cache/restore@v4
      with:
        path: dependencies/occt_install
        key: occt-${{inputs.version}}-${{runner.os}}-${{inputs.cpu}}-4

    - name: Checkout OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: Open-Cascade-SAS/OCCT
        submodules: true
        path: './dependencies/occt'
        ref: ${{inputs.version}}

    - name: Patch OCCT all versions
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/occt
      shell: bash
      run: patch -p1 < $GITHUB_ACTION_PATH/0001-Adding-INSTALL_RPATH-Linux.patch

    - name: Patch OCCT current version
      if: |
        steps.cache-occt.outputs.cache-hit != 'true' &&
        inputs.version != 'V7_6_3'
      working-directory: ${{github.workspace}}/dependencies/occt
      shell: bash
      run: |
        patch -p1 < $GITHUB_ACTION_PATH/occt-remove-unneeded-includes.patch
        patch -p1 < $GITHUB_ACTION_PATH/occt-remove-unneeded-quotes-warning-msvc.patch

    - name: Setup OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies
      shell: bash
      run: |
        mkdir occt_build
        mkdir occt_install

    - name: Configure OCCT current version
      if: |
        steps.cache-occt.outputs.cache-hit != 'true' &&
        inputs.version != 'V7_6_3'
      working-directory: ${{github.workspace}}/dependencies/occt_build
      shell: bash
      run: >
        cmake ../occt
        -DBUILD_ADDITIONAL_TOOLKITS="TKDESTEP;TKDEIGES;TKMesh;TKBinXCAF"
        -DBUILD_DOC_Overview=OFF
        -DBUILD_LIBRARY_TYPE=Shared
        -DBUILD_MODULE_ApplicationFramework=OFF
        -DBUILD_MODULE_DETools=OFF
        -DBUILD_MODULE_DataExchange=OFF
        -DBUILD_MODULE_Draw=OFF
        -DBUILD_MODULE_FoundationClasses=OFF
        -DBUILD_MODULE_ModelingAlgorithms=OFF
        -DBUILD_MODULE_ModelingData=OFF
        -DBUILD_MODULE_Visualization=OFF
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX:PATH=../occt_install
        -DCMAKE_INSTALL_NAME_DIR:PATH=${{github.workspace}}/dependencies/install/lib
        -DINSTALL_DIR_BIN:PATH=bin
        -DUSE_FREETYPE=OFF
        ${{ runner.os == 'macOS' && '-DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0' || null }}
        ${{ runner.os == 'Windows' && '-Ax64 -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL' || null }}

    - name: Configure OCCT min version
      if: |
        steps.cache-occt.outputs.cache-hit != 'true' &&
        inputs.version == 'V7_6_3'
      working-directory: ${{github.workspace}}/dependencies/occt_build
      shell: bash
      run: >
        cmake ../occt
        -DBUILD_ADDITIONAL_TOOLKITS="TKSTEP;TKIGES;TKMesh;TKXDESTEP;TKXDEIGES;TKBinXCAF"
        -DBUILD_DOC_Overview=OFF
        -DBUILD_LIBRARY_TYPE=Shared
        -DBUILD_MODULE_ApplicationFramework=OFF
        -DBUILD_MODULE_DataExchange=OFF
        -DBUILD_MODULE_Draw=OFF
        -DBUILD_MODULE_FoundationClasses=OFF
        -DBUILD_MODULE_ModelingAlgorithms=OFF
        -DBUILD_MODULE_ModelingData=OFF
        -DBUILD_MODULE_Visualization=OFF
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX:PATH=../occt_install
        -DCMAKE_INSTALL_NAME_DIR:PATH=${{github.workspace}}/dependencies/install/lib
        -DINSTALL_DIR_BIN:PATH=bin
        -DUSE_FREETYPE=OFF
        -DCMAKE_OSX_ARCHITECTURES=${{ inputs.cpu }}
        ${{ runner.os == 'macOS' && '-DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15' || null }}
        ${{ runner.os == 'Windows' && '-Ax64 -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL' || null }}

    - name: Build OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/occt_build
      shell: bash
      run: cmake --build . --parallel 2 --target install --config Release

    - name: Copy to install
      working-directory: ${{github.workspace}}/dependencies/occt_install
      shell: bash
      run: cp -r ./* ../install/

    - name: Save cache
      if: steps.cache-occt.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.cache-occt.outputs.cache-primary-key }}
        path: dependencies/occt_install
