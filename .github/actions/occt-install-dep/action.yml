name: 'Install OCCT Dependency'
description: 'Install OCCT Dependency using cache when possible'
runs:
  using: "composite"
  steps:

    - name: Cache OCCT
      id: cache-occt
      uses: actions/cache@v3
      with:
        path: dependencies/occt_install
        key: occt-V7_6_3-${{runner.os}}-3

    - name: Checkout OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: Open-Cascade-SAS/OCCT
        submodules: true
        path: './dependencies/occt'
        ref: V7_6_3

    - name: Patch OCCT INSTALL_RPATH
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/occt
      shell: bash
      run: patch -p1 < $GITHUB_ACTION_PATH/0001-Adding-INSTALL_RPATH-Linux.patch

    - name: Setup OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies
      shell: bash
      run: |
        mkdir occt_build
        mkdir occt_install

    - name: Configure OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/occt_build
      shell: bash
      run: >
        cmake ../occt
        -DBUILD_ADDITIONAL_TOOLKITS="TKSTEP;TKIGES;TKMesh;TKXDESTEP;TKXDEIGES"
        -DBUILD_DOC_Overview=OFF
        -DBUILD_LIBRARY_TYPE=Shared
        -DBUILD_MODULE_ApplicationFramework=OFF
        -DBUILD_MODULE_DataExchange=OFF
        -DBUILD_MODULE_Draw=OFF
        -DBUILD_MODULE_FoundationClasses=OFF
        -DBUILD_MODULE_ModelingAlgorithms=OFF
        -DBUILD_MODULE_ModelingData=OFF
        -DBUILD_MODULE_Visualization=OFF
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX:PATH=../occt_install
        -DINSTALL_DIR_BIN:PATH=bin
        -DUSE_FREETYPE=OFF
        ${{ runner.os == 'macOS' && '-DINSTALL_NAME_DIR:STRING=@rpath -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15' || null }}
        ${{ runner.os == 'Windows' && '-Ax64 -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL' || null }}

    - name: Build OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/occt_build
      shell: bash
      run: cmake --build . --parallel 2 --target install --config Release

    - name: Copy to install
      working-directory: ${{github.workspace}}/dependencies/occt_install
      shell: bash
      run: cp -r ./* ../install/
