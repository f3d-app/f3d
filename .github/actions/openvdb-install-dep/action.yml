name: 'Install OpenVDB Dependency'
description: 'Install OpenVDB Dependency using cache when possible'
inputs:
  cpu:
    description: 'CPU architecture to build for'
    required: false
    default: 'x86_64'

runs:
  using: "composite"
  steps:

    - name: Cache OpenVDB
      id: cache-openvdb
      uses: actions/cache@v3
      with:
        path: dependencies/openvdb_install
        key: openvdb-1.5.6-${{runner.os}}-${{inputs.cpu}}-0

    - name: Checkout OpenVDB
      if: steps.cache-openvdb.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: AcademySoftwareFoundation/openvdb
        path: './dependencies/openvdb'
        ref: v11.0.0

    - name: Setup OpenVDB
      if: steps.cache-openvdb.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies
      shell: bash
      run: |
        mkdir openvdb_build
        mkdir openvdb_install

    - name: Configure OpenVDB
      if: steps.cache-openvdb.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/openvdb_build
      shell: bash
      run: >
        cmake ../openvdb
        -DBUILD_SHARED_LIBS=ON
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX=../openvdb_install
        -DCMAKE_OSX_ARCHITECTURES=${{ inputs.cpu }}
        -DCMAKE_PREFIX_PATH:PATH=../install/
        -DOPENVDB_BUILD_BINARIES=OFF
        -DOPENVDB_BUILD_VDB_PRINT=OFF
        -DOPENVDB_CORE_STATIC=OFF
        -DOPENVDB_ENABLE_UNINSTALL=OFF
        -DUSE_PKGCONFIG=OFF
        -DUSE_TBB=OFF
        ${{ runner.os == 'macOS' && '-DCMAKE_OSX_DEPLOYMENT_TARGET=10.15' || null }}
        ${{ runner.os == 'Windows' && '-Ax64 -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL' || null }}

    - name: Build OpenVDB
      if: steps.cache-openvdb.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/openvdb_build
      shell: bash
      run: cmake --build . --parallel 2 --target install --config Release

    - name: Copy to install
      working-directory: ${{github.workspace}}/dependencies/openvdb_install
      shell: bash
      run: cp -r ./* ../install/
