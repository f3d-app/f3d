name: 'Install ospray Dependency'
description: 'Install ospray Dependency using cache when possible'
inputs:
  os:
    description: 'OS to build on'
    required: false
    default: 'ubuntu-latest'
runs:
  using: "composite"
  steps:

    - name: Cache ospray
      id: cache-ospray
      uses: actions/cache@v3
      with:
        path: dependencies/ospray_install
        key: ospray-v2.7.1-0-${{inputs.os}}

    - name: Checkout ospray
      if: steps.cache-ospray.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: ospray/ospray
        path: './dependencies/ospray'
        ref: v2.7.1

    - name: Setup ospray
      if: steps.cache-ospray.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies
      shell: bash
      run: |
        mkdir ospray_build
        mkdir ospray_install

    - name: Configure ospray
      if: steps.cache-ospray.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/ospray_build
      shell: bash
      run: >
        cmake ../ospray
        -DOSPRAY_ISPC_DIRECTORY:PATH=$(pwd)/../ispc/bin/ispc
        -DOSPRAY_APPS_EXAMPLES:BOOL=OFF
        -DOSPRAY_APPS_TESTING:BOOL=OFF
        -DOSPRAY_ENABLE_APPS:BOOL=OFF
        -DOSPRAY_MODULE_DENOISER:BOOL=ON
        -DOSPRAY_MODULE_MPI:BOOL=OFF
        -DOSPRAY_MPI_BUILD_TUTORIALS:BOOL=OFF
        -DISPC_EXECUTABLE:PATH=$(pwd)/../ispc/bin/ispc
        -DTBB_ROOT:PATH=$(pwd)/../tbb_install/
        -DCMAKE_PREFIX_PATH:PATH=$(pwd)/../install/
        -DCMAKE_INSTALL_PREFIX:PATH=../ospray_install
        ${{ inputs.os == 'macos-latest' && '-DCMAKE_OSX_DEPLOYMENT_TARGET=10.15' || null }}
        ${{ inputs.os == 'windows-latest' && '-Ax64 -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded' || null }}

    - name: Build ospray
      if: steps.cache-ospray.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/ospray_build
      shell: bash
      run: cmake --build . --parallel 2 --target install --config Release

    - name: Copy to install
      working-directory: ${{github.workspace}}/dependencies/ospray_install
      shell: bash
      run: cp -r ./* ../install/
