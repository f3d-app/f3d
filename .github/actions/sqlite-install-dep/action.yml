name: 'Install SQLite Dependency'
description: 'Install SQLite Dependency using cache when possible'
inputs:
  cpu:
    description: 'CPU architecture to build for'
    required: false
    default: 'x86_64'

runs:
  using: "composite"
  steps:

    - name: Cache SQLite
      id: cache-sqlite
      uses: actions/cache/restore@v4
      with:
        path: dependencies/sqlite_install
        key: sqlite-v3.39.2-${{runner.os}}-${{inputs.cpu}}-1

    - name: Checkout SQLite
      if: steps.cache-sqlite.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: sqlite/sqlite
        path: './dependencies/sqlite'
        ref: version-3.39.2

    - name: Setup SQLite
      if: steps.cache-sqlite.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies
      shell: bash
      run: |
        mkdir sqlite_install

    - name: Configure SQLite on Unix
      if: steps.cache-sqlite.outputs.cache-hit != 'true' && runner.os != 'Windows'
      working-directory: ${{github.workspace}}/dependencies/sqlite
      shell: bash
      run: |
        ./configure --prefix=${{github.workspace}}/dependencies/sqlite_install

    - name: Build and Install SQLite on Unix
      if: steps.cache-sqlite.outputs.cache-hit != 'true' && runner.os != 'Windows'
      working-directory: ${{github.workspace}}/dependencies/sqlite
      shell: bash
      run: |
        make
        make install

    - name: Configure SQLite on Windows
      if: steps.cache-sqlite.outputs.cache-hit != 'true' && runner.os == 'Windows'
      working-directory: ${{github.workspace}}/dependencies/sqlite
      shell: bash
      run: |
        mkdir -p sqlite_install
        cd sqlite_install
        cmake -G "Visual Studio 16 2019" -A x64 -DCMAKE_INSTALL_PREFIX=../sqlite_install ..

    - name: Build and Install SQLite on Windows
      if: steps.cache-sqlite.outputs.cache-hit != 'true' && runner.os == 'Windows'
      working-directory: ${{github.workspace}}/dependencies/sqlite/sqlite_install
      shell: bash
      run: |
        cmake --build . --config Release --target INSTALL

    - name: Copy to install
      working-directory: ${{github.workspace}}/dependencies/sqlite_install
      shell: bash
      run: cp -r ./* ../install/

    - name: Save cache
      if: steps.cache-sqlite.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.cache-sqlite.outputs.cache-primary-key }}
        path: dependencies/sqlite_install