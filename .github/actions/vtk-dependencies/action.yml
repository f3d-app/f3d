name: "Install VTK Dependencies"
description: "Install multiple VTK Dependencies"
if: runner.os == 'Linux'
inputs:
  cpu:
    description: "CPU architecture to build for"
    required: false
    default: "x86_64"
  source_dir:
    description: "Source directory for actions"
    required: false
    default: "./source"
  blosc_version:
    description: "Version of blosc to build"
    required: true
  openvdb_version:
    description: "Version of openvdb to build"
    required: false
  tbb_version:
    description: "Version of tbb to build"
    required: true
  zlib_version:
    description: "Version of zlib to build"
    required: true
  pdal_version:
    description: "Version of pdal to build against"
    required: false
  sqlite_version:
    description: "Version of sqlite to build against"
    required: true
  xercesc_version:
    description: "Version of xerces-c to build against"
    required: true
  curl_version:
    description: "Version of curl to build against"
    required: true
  gdal_version:
    description: "Version of gdal to build against"
    required: true
  libgeotiff_version:
    description: "Version of libgeotiff to build against"
    required: true
  libtiff_version:
    description: "Version of libtiff to build against"
    required: true
  proj_version:
    description: "Version of proj to build against"
    required: true

runs:
  using: "composite"
  steps:
    - name: Copy actions to a common directory TODO move to another step ?
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        mkdir .actions
        cp -r ${{inputs.source_dir}}/.github/actions/* .actions/

    - name: Install TBB
      uses: ./.actions/tbb-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.tbb_version}}

    - name: Install zlib
      uses: ./.actions/zlib-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.zlib_version}}

    - name: Install blosc
      uses: ./.actions/blosc-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.blosc_version}}
        zlib_version: ${{inputs.zlib_version}}

    - name: Install OpenVDB
      if: inputs.openvdb_version != ''
      uses: ./.actions/openvdb-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.openvdb_version}}
        blosc_version: ${{inputs.blosc_version}}
        tbb_version: ${{inputs.tbb_version}}
        zlib_version: ${{inputs.zlib_version}}

    - name: Install sqlite
      if: runner.os == 'Linux'
      uses: ./.actions/sqlite-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.sqlite_version}}

    - name: Install xerces-c
      if: runner.os == 'Linux'
      uses: ./.actions/xercesc-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.xercesc_version}}

    - name: Install curl
      if: runner.os == 'Linux'
      uses: ./.actions/curl-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.curl_version}}

    - name: Install proj
      if: runner.os == 'Linux'
      uses: ./.actions/proj-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.proj_version}}
        sqlite_version: ${{inputs.sqlite_version}}

    - name: Install gdal
      if: runner.os == 'Linux'
      uses: ./.actions/gdal-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.gdal_version}}
        proj_version: ${{inputs.proj_version}}

    - name: Install libtiff
      uses: ./.actions/libtiff-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.libtiff_version}}
        proj_version: ${{inputs.proj_version}}

    - name: Install libgeotiff
      if: runner.os == 'Linux'
      uses: ./.actions/libgeotiff-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.libgeotiff_version}}
        proj_version: ${{inputs.proj_version}}
        libtiff_version: ${{inputs.libtiff_version}}

    - name: Install PDAL
      if: runner.os == 'Linux'
      uses: ./.actions/pdal-install-dep
      with:
        cpu: ${{inputs.cpu}}
        version: ${{inputs.pdal_version}}
        gdal_version: ${{inputs.gdal_version}}
        libgeotiff_version: ${{inputs.libgeotiff_version}}
        sqlite_version: ${{inputs.sqlite_version}}
        curl_version: ${{inputs.curl_version}}
        xercesc_version: ${{inputs.xercesc_version}}
