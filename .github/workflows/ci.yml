name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - master

jobs:

#----------------------------------------------------------------------------
# MAIN CI: Build and test with a cross-platform, cross-vtk build matrix
#----------------------------------------------------------------------------
  ci:
    if: github.event.pull_request.draft == false

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        config:
          - { name: "VTK", vtk_version: commit, enable_tbb: 'false', enable_raytracing: 'false' }

    runs-on: ${{matrix.os}}
    container: ${{ matrix.os == 'ubuntu-latest' && 'ghcr.io/f3d-app/f3d-ci' || null }}

    env:
      DISPLAY: :0

    steps:

    - name: Install tools Windows
      if: inputs.os == 'windows-latest'
      shell: cmd
      run: choco install sccache

    - name: Install tools MacOS
      if: inputs.os == 'macos-latest'
      shell: bash
      run: brew install sccache

    - name: Initialize sccache environnement
      shell: bash
      run: |
        echo SCCACHE_CACHE=$(sccache --show-stats | grep Local | cut -d '"' -f2) >> $GITHUB_ENV
        echo DATE_STRING=$(date +'%Y%m%d') >> $GITHUB_ENV
        sccache --stop-server

    - name: Recover sccache cache
      uses: actions/cache@v3
      with:
        path: ${{env.SCCACHE_CACHE}}
        key: sccache-cache-1-${{inputs.os}}-${{env.DATE_STRING}}
        restore-keys: sccache-cache-1-${{inputs.os}}

    - name: Start sccache
      shell: bash
      working-directory: ${{github.workspace}}
      run: sccache --start-server

    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: 'source'
        fetch-depth: 0
        lfs: 'false'

    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set LFS env var
      working-directory: ${{github.workspace}}/source
      shell: bash
      run: echo "LFS_SHA=$(git log -n 1 --pretty=format:%H -- testing/data/ testing/baselines/)" >> $GITHUB_ENV

    - name: Copy LFS Data
      uses: ./source/.github/actions/lfs-copy
      with:
        lfs_sha: ${{env.LFS_SHA}}

    - name: Dependencies Dir
      working-directory: ${{github.workspace}}
      run: mkdir dependencies

    - name: Install VTK dependency
      uses: ./source/.github/actions/vtk-install-dep
      with:
        vtk_version: ${{matrix.config.vtk_version}}
        vtk_sha_file: ./source/.github/actions/vtk_commit_sha
        os: ${{matrix.os}}
        enable_tbb: ${{matrix.config.enable_tbb}}
        enable_raytracing: ${{matrix.config.enable_raytracing}}


    - name: Cleanup sccache
      working-directory: ${{github.workspace}}
      shell: bash
      run: sccache --stop-server
