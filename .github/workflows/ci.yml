name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - master

concurrency:
  group: '${{ github.workflow }}-${{ github.ref_name }}'
  cancel-in-progress: true

jobs:

#----------------------------------------------------------------------------
# Cache LFS: Checkout LFS data and update the cache to limit LFS bandwidth
#----------------------------------------------------------------------------
  cache_lfs:
    runs-on: ubuntu-latest
    name: Update LFS data cache
    outputs:
      lfs_sha: ${{ steps.lfs_sha_recover.outputs.lfs_sha }}
    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        fetch-depth: 0
        lfs: false

    - name: Set LFS env var
      working-directory: ${{github.workspace}}/source
      id: lfs_sha_recover
      shell: bash
      run: echo "lfs_sha=$(git log -n 1 --pretty=format:%H -- testing/data/ testing/baselines/ examples/**/*/data/ examples/**/*/baselines/ .github/baselines/)" >> $GITHUB_OUTPUT

    - name: Copy LFS Data
      uses: ./source/.github/actions/lfs-copy
      with:
        lfs_sha: ${{ steps.lfs_sha_recover.outputs.lfs_sha }}
        workflow_label: 'producer'

#----------------------------------------------------------------------------
# MacOS CI: Build and test, cross-vtk build matrix
#----------------------------------------------------------------------------
  macos:
    if: github.event.pull_request.draft == false
    needs: cache_lfs

    strategy:
      fail-fast: false
      matrix:
        vtk_version: [commit]
        cpu: [x86_64]
        bundle_label: [no-bundle]

    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        fetch-depth: 0
        lfs: false

    - name: Generic CI
      uses: ./source/.github/actions/generic-ci
      with:
        vtk_version: ${{matrix.vtk_version}}
        bundle_label: ${{matrix.bundle_label}}
        cpu: ${{matrix.cpu}}
        lfs_sha: ${{ needs.cache_lfs.outputs.lfs_sha}}
