# When this file is run by CMake through the find_package command, the
# following targets will exist:
#
# The following variables will also be defined:
#
#   f3d_BUILD_APPLICATION          Will be enabled if F3D application was built
#   f3d_MODULE_EXTERNAL_RENDERING  Will be enabled if F3D was built with external rendering support
#   f3d_MODULE_RAYTRACING          Will be enabled if F3D was built with raytracing support
#   f3d_MODULE_EXR                 Will be enabled if F3D was built with OpenEXR images support
#   f3d_BINDINGS_PYTHON            Will be enabled if F3D was built with python bindings
#   f3d_BINDINGS_JAVA              Will be enabled if F3D was built with java bindings
#   f3d_CONFIG_DIR                 Path to F3D configuration directory, can be absolute or relative
#
# Optional components are:
#
# `application`: If found, it the following target will exist
#
#   f3d::f3d           Target that contains the F3D executable
#
# `library`: If found, it the following target will exist
#
#   f3d::libf3d        Target that contains the libf3d
#
# And the following local variable will also be defined
#
#   f3d_INCLUDE_DIR                Absolute path to the include directory of public f3d library classes
#
# `plugin`: If found TODO
#
# Please note, if no components are set, `library` will be added by default

@PACKAGE_INIT@

set(f3d_BUILD_APPLICATION "@F3D_BUILD_APPLICATION@")
set(f3d_MODULE_EXTERNAL_RENDERING "@F3D_MODULE_EXTERNAL_RENDERING@")
set(f3d_MODULE_RAYTRACING "@F3D_MODULE_RAYTRACING@")
set(f3d_MODULE_EXR "@F3D_MODULE_EXR@")
set(f3d_BINDINGS_PYTHON "@F3D_BINDINGS_PYTHON@")
set(f3d_BINDINGS_JAVA "@F3D_BINDINGS_JAVA@")
set(f3d_CONFIG_DIR "@f3d_config_dir@")

# If no components specified, look for `library` component
if(NOT f3d_FIND_COMPONENTS)
  set(f3d_FIND_COMPONENTS library)
endif()
message(WARNING ${f3d_FIND_COMPONENTS})

foreach(component ${f3d_FIND_COMPONENTS})
  # For requested component, execute its "config" script
  include(${CMAKE_CURRENT_LIST_DIR}/${component}-config.cmake)
endforeach()

check_required_components(f3d)
